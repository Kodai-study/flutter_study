// Mocks generated by Mockito 5.4.4 from annotations
// in first_flutter/test/api_book_searcher_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:first_flutter/api_book_searcher.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;


class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BookApiManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookApiManager extends _i1.Mock implements _i3.BookApiManager {
  @override
  _i4.Future<_i2.Response> getBookDataFromApi(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookDataFromApi,
          [query],
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #getBookDataFromApi,
            [query],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #getBookDataFromApi,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  List<dynamic> getBookTitles(String bookDataBody) => (super.noSuchMethod(
        Invocation.method(
          #getBookTitles,
          [bookDataBody],
        ),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as List<dynamic>);
}
